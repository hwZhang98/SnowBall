{
    "sourceFile": "src/components/FloatingBoll/FloatingBoll.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 10,
            "patches": [
                {
                    "date": 1636438916733,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1636438945393,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,11 @@\n \n export class FloatingBoll extends React.Component<FloatingBollProps, {}> {\n     constructor(props: FloatingBollProps){\n         super(props);\n-        state \n+        this.state = {\n+\n+        }\n     }\n \n     render(): JSX.Element {\n         return (\n"
                },
                {
                    "date": 1636439074007,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,16 +13,16 @@\n export class FloatingBoll extends React.Component<FloatingBollProps, {}> {\n     constructor(props: FloatingBollProps){\n         super(props);\n         this.state = {\n-\n+            open: false,\n         }\n     }\n \n     render(): JSX.Element {\n         return (\n             <Context.Provider value={this.props}>\n-                <FunctionBoll parent={true} ></FunctionBoll>\n+                <FunctionBoll parent={true} onClick=></FunctionBoll>\n                 { this.props.child?.length && this.props.child.map((props, i) => <FunctionBoll {...props} order={i+1} ></FunctionBoll>)}\n             </Context.Provider>  \n         )\n     }\n"
                },
                {
                    "date": 1636439079195,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,8 +16,9 @@\n         this.state = {\n             open: false,\n         }\n     }\n+    \n \n     render(): JSX.Element {\n         return (\n             <Context.Provider value={this.props}>\n"
                },
                {
                    "date": 1636439085374,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,10 +16,10 @@\n         this.state = {\n             open: false,\n         }\n     }\n+\n     \n-\n     render(): JSX.Element {\n         return (\n             <Context.Provider value={this.props}>\n                 <FunctionBoll parent={true} onClick=></FunctionBoll>\n"
                },
                {
                    "date": 1636439095758,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n             open: false,\n         }\n     }\n \n-    \n+    const open\n     render(): JSX.Element {\n         return (\n             <Context.Provider value={this.props}>\n                 <FunctionBoll parent={true} onClick=></FunctionBoll>\n"
                },
                {
                    "date": 1636439102207,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n             open: false,\n         }\n     }\n \n-    const open\n+    const openChild = () =\n     render(): JSX.Element {\n         return (\n             <Context.Provider value={this.props}>\n                 <FunctionBoll parent={true} onClick=></FunctionBoll>\n"
                },
                {
                    "date": 1636439111078,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n             open: false,\n         }\n     }\n \n-    const openChild = () =\n+    const openChild = () => {}\n     render(): JSX.Element {\n         return (\n             <Context.Provider value={this.props}>\n                 <FunctionBoll parent={true} onClick=></FunctionBoll>\n"
                },
                {
                    "date": 1636439118604,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n             open: false,\n         }\n     }\n \n-    const openChild = () => {}\n+    const openChild = () => {this.setState({open: true});}\n     render(): JSX.Element {\n         return (\n             <Context.Provider value={this.props}>\n                 <FunctionBoll parent={true} onClick=></FunctionBoll>\n"
                },
                {
                    "date": 1636439124759,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n     const openChild = () => {this.setState({open: true});};\n     render(): JSX.Element {\n         return (\n             <Context.Provider value={this.props}>\n-                <FunctionBoll parent={true} onClick=op></FunctionBoll>\n+                <FunctionBoll parent={true} onClick=openChild></FunctionBoll>\n                 { this.props.child?.length && this.props.child.map((props, i) => <FunctionBoll {...props} order={i+1} ></FunctionBoll>)}\n             </Context.Provider>  \n         )\n     }\n"
                },
                {
                    "date": 1636439298727,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n \n     render(): JSX.Element {\n         return (\n             <Context.Provider value={this.props}>\n-                <FunctionBoll parent={true} onClick={this,openChild}></FunctionBoll>\n+                <FunctionBoll parent={true} onClick={thisopenChild}></FunctionBoll>\n                 { this.props.child?.length && this.props.child.map((props, i) => <FunctionBoll {...props} order={i+1} ></FunctionBoll>)}\n             </Context.Provider>  \n         )\n     }\n"
                }
            ],
            "date": 1636438916733,
            "name": "Commit-0",
            "content": "import * as React from \"react\";\nimport \"./style/index.css\";\nimport {FunctionBollProps, FunctionBoll} from \"./FunctionBoll\";\n\nexport interface FloatingBollProps extends FunctionBollProps{\n    child?: Array<FloatingBollProps>;\n    direction?: 'left'|'right'|'up'|'down';\n    distance?: number;\n}\n\nexport const Context = React.createContext(null);\n\nexport class FloatingBoll extends React.Component<FloatingBollProps, {}> {\n    constructor(props: FloatingBollProps){\n        super(props);\n        state \n    }\n\n    render(): JSX.Element {\n        return (\n            <Context.Provider value={this.props}>\n                <FunctionBoll parent={true} ></FunctionBoll>\n                { this.props.child?.length && this.props.child.map((props, i) => <FunctionBoll {...props} order={i+1} ></FunctionBoll>)}\n            </Context.Provider>  \n        )\n    }\n}"
        }
    ]
}